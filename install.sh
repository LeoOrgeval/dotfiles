#!/bin/bash

# Script d'installation compl√®te des dotfiles et applications
set -e

echo "üöÄ Installation compl√®te de l'environnement de d√©veloppement..."

# V√©rifier si Homebrew est install√©
if ! command -v brew &> /dev/null; then
    echo "üì¶ Installation de Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    # Ajouter Homebrew au PATH pour cette session
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Installer toutes les applications depuis le Brewfile
if [ -f "Brewfile" ]; then
    echo "üì± Installation des applications depuis Brewfile..."
    brew bundle install --file=Brewfile
else
    echo "‚ö†Ô∏è  Brewfile non trouv√©, installation manuelle..."
    brew install git stow starship zoxide zsh-autosuggestions zsh-syntax-highlighting nvm mas ripgrep fd jq gnupg pinentry-mac git-who gh
    brew install --cask orbstack warp visual-studio-code spotify notion discord tailscale
    brew install --cask 1password 1password-cli google-chrome
    mas install 310633997  # WhatsApp
fi

# Cr√©er les liens symboliques
echo "üîó Cr√©ation des liens symboliques..."
stow .

# V√©rifier si le dossier .ssh existe et configurer les permissions
if [ -d ~/.ssh ]; then
    echo "üîê Configuration des permissions SSH..."
    chmod 700 ~/.ssh

    if [ -f ~/.ssh/config ]; then
        chmod 600 ~/.ssh/config
        echo "‚úÖ Permissions SSH configur√©es"
    fi
else
    echo "‚ö†Ô∏è  Le dossier .ssh n'existe pas encore"
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh
fi

# Ajouter la config SSH pour utiliser 1Password comme agent
if ! grep -q "IdentityAgent" ~/.ssh/config 2>/dev/null; then
    echo "üõ†Ô∏è  Ajout de la configuration SSH pour 1Password..."
    cat <<EOF >> ~/.ssh/config

# Utiliser 1Password comme agent SSH
Host *
  IdentityAgent "~/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
EOF
    chmod 600 ~/.ssh/config
fi

# Sign-in √† 1Password CLI (ouverture navigateur)
echo "üîë Connexion au CLI 1Password..."
op signin || echo "‚ÑπÔ∏è  Ouvrez 1Password, allez dans Param√®tres > D√©veloppeurs et activez l'agent SSH. Relancez 'op signin' si besoin."

# Configuration de NVM et Node.js
echo "üü¢ Configuration de NVM et Node.js..."
export NVM_DIR="$HOME/.nvm"

# Cr√©er le r√©pertoire NVM s'il n'existe pas
[ ! -d "$NVM_DIR" ] && mkdir -p "$NVM_DIR"

# Charger NVM
if [ -s "/opt/homebrew/opt/nvm/nvm.sh" ]; then
    source "/opt/homebrew/opt/nvm/nvm.sh"
    source "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"

    # Installer et utiliser la version LTS de Node.js
    echo "üì¶ Installation de Node.js LTS..."
    nvm install --lts
    nvm use --lts
    nvm alias default node

    echo "‚úÖ Node.js $(node --version) install√© et configur√©"

    # Installation des paquets globaux
    echo "üì¶ Installation des paquets globaux Node.js..."
    npm install -g pnpm eslint prettier
else
    echo "‚ö†Ô∏è  NVM non trouv√©, red√©marrez votre terminal et lancez 'nvm install --lts'"
fi

# Recharger la configuration zsh
if [ -f ~/.zshrc ]; then
    echo "‚ôªÔ∏è  Rechargement de la configuration zsh..."
    source ~/.zshrc 2>/dev/null || echo "‚ÑπÔ∏è  Red√©marrez votre terminal pour appliquer les changements"
fi

echo ""
echo "üéâ Installation termin√©e !"
echo ""
echo "üìù Prochaines √©tapes :"
echo "  - Red√©marrez votre terminal"
echo "  - Connectez-vous au Mac App Store pour WhatsApp"
echo "  - Activez l‚Äôagent SSH dans 1Password: Pr√©f√©rences ‚Üí D√©veloppeurs ‚Üí Int√©gration SSH/GPG"
echo "  - Connectez-vous √† 1Password via 'op signin'"
echo "  - V√©rifiez Node.js: node --version"
echo "  - V√©rifiez la config Git: git config --global --list"
echo "  - V√©rifiez la config SSH: ssh-add -L"
echo "  - Testez GitHub: ssh -T git@github.com"
echo ""
echo "üöÄ Applications install√©es :"
echo "  ‚Ä¢ OrbStack (Docker)"
echo "  ‚Ä¢ Warp (Terminal)"
echo "  ‚Ä¢ VS Code"
echo "  ‚Ä¢ Spotify"
echo "  ‚Ä¢ Notion"
echo "  ‚Ä¢ Discord"
echo "  ‚Ä¢ Tailscale"
echo "  ‚Ä¢ WhatsApp"
echo "  ‚Ä¢ 1Password + CLI (avec agent SSH)"